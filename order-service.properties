

# Server Port
server.port=8086

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/orderdb?useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Hhdh573)&@/dg
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true 
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Logging
logging.level.com.bytebites.orderservice=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG 
logging.level.org.hibernate.orm.jdbc.bind=TRACE 

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# ===== CIRCUIT BREAKER CONFIG =====
resilience4j.circuitbreaker.instances.restaurantService.register-health-indicator=true
resilience4j.circuitbreaker.instances.restaurantService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.restaurantService.sliding-window-size=10
resilience4j.circuitbreaker.instances.restaurantService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.restaurantService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.restaurantService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.restaurantService.minimum-number-of-calls=5

# ===== RETRY CONFIG (OPTIONAL) =====
resilience4j.retry.instances.restaurantService.max-attempts=3
resilience4j.retry.instances.restaurantService.wait-duration=500ms

# ===== TIMEOUT CONFIG (OPTIONAL) =====
resilience4j.timelimiter.instances.restaurantService.timeout-duration=2s
logging.level.org.springframework.security=DEBUG
management.endpoints.web.exposure.include=*
